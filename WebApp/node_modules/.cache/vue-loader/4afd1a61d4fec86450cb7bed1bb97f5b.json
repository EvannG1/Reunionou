{"remainingRequest":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lucasportaro/Documents/Reunionou/WebApp/src/views/Home.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/src/views/Home.vue","mtime":1617184704000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lucasportaro/Documents/Reunionou/WebApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idXR0b24tZGlzcGxheSB7CiAgZGlzcGxheTogaW5saW5lOwp9CgouZGVsZXRlQnRuIHsKICB3aWR0aDogMjAlOwogIGZsb2F0OiByaWdodDsgCn0KCi5lZGl0QnRuIHsKICB3aWR0aDogMjAlOwogIGZsb2F0OiByaWdodDsKICBtYXJnaW4tcmlnaHQ6IDFlbTsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <Navbar />\n    <div class=\"container mt-5\">\n\n      <h1 class=\"text-center\">Mes évènements</h1>\n      <div class=\"text-center mb-3\">\n        <a href=\"#\">Mes évènements</a> -\n        <a href=\"#\">Mes évènements partagés</a>\n      </div>\n\n      <div class=\"row mb-5\">\n        <div class=\"col-12 col-sm-7\">\n          <div class=\"card mb-3\">\n            <l-map v-if=\"showMap\" :zoom=\"zoom\" :center=\"center\" :options=\"mapOptions\" style=\"height: 350px; width: 100%;\"\n              @update:center=\"centerUpdate\" @update:zoom=\"zoomUpdate\">\n              <l-tile-layer :url=\"url\" :attribution=\"attribution\" />\n              <l-marker :lat-lng=\"withTooltip\">\n                <l-tooltip :options=\"{ permanent: true, interactive: true }\">\n                  {{ location.name }}\n                </l-tooltip>\n              </l-marker>\n            </l-map>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ title }} <font-awesome-icon icon=\"share-alt-square\" style=\"float: right;\"></font-awesome-icon></h5>\n              <p class=\"card-text\">{{ description }}</p>\n              <p class=\"card-text button-display\"><small class=\"text-muted\"><font-awesome-icon icon=\"calendar-alt\"></font-awesome-icon> Prévu le {{ date }} par {{ author }}</small></p>\n              <button @click=\"deleteEvent(id)\" type=\"button\" class=\"btn btn-danger deleteBtn\">Supprimer</button>\n              <router-link :to=\"{ name: 'EditEvent', params: { id: id} }\">\n                <button type=\"button\" class=\"btn btn-warning editBtn\">Modifier</button>\n              </router-link>\n            </div>\n          </div>\n\n          <div class=\"row mb-3\">\n              <div class=\"col-10\">\n                <input v-model=\"input_comment\" type=\"text\" class=\"form-control\" placeholder=\"Entrez votre commentaire...\">\n              </div>\n              <div class=\"col-2\">\n                <button @click=\"postComment(id)\" type=\"button\" class=\"btn btn-primary\">Envoyer</button>\n              </div>\n          </div>\n          \n          <div class=\"btn-group mb-3 w-100\" role=\"group\">\n            <button @click=\"postAvailable(id)\" type=\"button\" class=\"btn btn-primary\">Je serais présent</button>\n            <button @click=\"postAbsent(id)\" type=\"button\" class=\"btn btn-danger\">Je serais absent</button>\n          </div>\n\n          <div class=\"card\">\n              <div class=\"card-body text-center\">\n                  <h4 class=\"card-title\">Liste des commentaires</h4>\n                  <hr>\n              </div>\n              <div class=\"comment-widgets\">\n                  <div :key=\"index\" v-for=\"(comment, index) in comments\" class=\"d-flex flex-row mb-3\">\n                      <div class=\"p-2\"><font-awesome-icon icon=\"user\" style=\"width: 50px;\"></font-awesome-icon></div>\n                      <div class=\"w-100\">\n                          <h6>{{ comment.user.fullname }}</h6> <span class=\"m-b-15 d-block\">{{ comment.content }}</span>\n                      </div>\n                  </div>\n              </div>\n          </div>\n    \n          \n        </div>\n        <div class=\"col-12 col-sm-5\">\n          <div :key=\"index\" v-for=\"(event, index) in events\" class=\"list-group\">\n            <a @click=\"selectEvent(event.id, event.title, event.description, event.date, event.author, event.location, index)\" href=\"#\" class=\"list-group-item list-group-item-action\">\n              <div class=\"d-flex w-100 justify-content-between\">\n                <h5 class=\"mb-1\">{{ event.title }}</h5>\n                <small><font-awesome-icon icon=\"map-marker-alt\"></font-awesome-icon> {{ event.location.name }}</small>\n              </div>\n              <p class=\"mb-1\">{{ event.description }}</p>\n              <small><font-awesome-icon icon=\"calendar-alt\"></font-awesome-icon> Prévu le {{ event.date }}</small>\n            </a>\n          </div>\n          <router-link to=\"/create/event\">\n          <div class=\"d-grid gap-2\">\n            <button class=\"btn btn-primary\" type=\"button\">Créer un nouvel évènement</button>\n          </div>\n          </router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.button-display {\n  display: inline;\n}\n\n.deleteBtn {\n  width: 20%;\n  float: right; \n}\n\n.editBtn {\n  width: 20%;\n  float: right;\n  margin-right: 1em;\n}\n</style>\n\n<script>\nimport Navbar from '@/components/Navbar.vue';\nimport { latLng } from \"leaflet\";\nimport { LMap, LTileLayer, LMarker, LTooltip } from \"vue2-leaflet\";\nimport { Icon } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport moment from 'moment';\n\nmoment.locale('fr');\n\ndelete Icon.Default.prototype._getIconUrl;\nIcon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n\nexport default {\n  components: {\n    Navbar,\n    LMap,\n    LTileLayer,\n    LMarker,\n    LTooltip\n  },\n\n  data() {\n    return {\n      events: [],\n      comments: [],\n      index: false,\n      id: false,\n      title: false,\n      description: false,\n      date: false,\n      author: false,\n      location: false,\n      comment_content: false,\n      comment_user: false,\n      input_comment: '',\n\n      zoom: 15,\n      center: latLng(location.x, location.y),\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      withTooltip: latLng(47.41422, -1.250482),\n      currentZoom: 15,\n      currentCenter: latLng(location.x, location.y),\n      mapOptions: {\n        zoomSnap: 0.5\n      },\n      showMap: true\n    }\n  },\n  methods: {\n    selectEvent(id, title, description, date, author, location, index) {\n      this.index = index;\n      this.id = id;\n      this.title = title;\n      this.description = description;\n      this.date = date;\n      this.author = author.fullname;\n      this.location = location;\n      this.center = latLng(location.x, location.y);\n      this.currentCenter = latLng(location.x, location.y);\n      this.withTooltip = latLng(location.x, location.y);\n\n      api.get('comments/' + this.id).then(response => {\n          this.comments = [];\n          response.data.forEach(element => {\n            this.comments.push(element);\n          });\n      });\n    },\n\n    postAvailable(id) {\n      let content = \"Je serais présent.\";\n      api.post('comment/' + id, {\n        content: content,\n        event_id: id\n      }).then(response => {\n        this.getComments();\n      });\n    },\n\n    postAbsent(id) {\n      let content = \"Je serais absent.\";\n      api.post('comment/' + id, {\n        content: content,\n        event_id: id\n      }).then(response => {\n        this.getComments();\n      });\n    },\n\n    postComment(id) {\n      let content = this.input_comment;\n      api.post('comment/' + id, {\n        content: content,\n        event_id: id\n      }).then(response => {\n        this.input_comment = '';\n        this.getComments();\n      });\n    },\n\n    getComments() {\n      this.comments = [];\n      api.get('comments/' + this.id).then(response => {\n          response.data.forEach(element => {\n            this.comments.push(element);\n          });\n      });\n    },\n\n    deleteEvent(id) {\n      if(confirm(\"Êtes vous sûr de vouloir supprimer cet évènement ?\")) {\n        api.post('delete/event/' + id).then(response => {\n          document.location.reload();\n        });\n      }\n    },\n\n    zoomUpdate(zoom) {\n      this.currentZoom = zoom;\n    },\n\n    centerUpdate(center) {\n      this.currentCenter = center;\n    },\n\n    showLongText() {\n      this.showParagraph = !this.showParagraph;\n    },\n\n    innerClick() {\n      alert(\"Click!\");\n    }\n  },\n  mounted() {\n    api.get('events').then(response => {\n        this.id = response.data.owned[0].id;\n        this.title = response.data.owned[0].title;\n        this.description = response.data.owned[0].description;\n        this.date = moment(response.data.owned[0].date).format('L à LT');\n        this.author = response.data.owned[0].author.fullname;\n        this.location = response.data.owned[0].location;\n        this.center = latLng(response.data.owned[0].location.x, response.data.owned[0].location.y);\n        this.currentCenter = latLng(response.data.owned[0].location.x, response.data.owned[0].location.y);\n        this.withTooltip = latLng(response.data.owned[0].location.x, response.data.owned[0].location.y);\n\n        response.data.owned.forEach(element => {\n          this.events.push(element);\n        });\n\n        this.events.forEach(element => {\n          element.date = moment(element.date).format('L à LT');\n        });\n\n        this.getComments();\n    });\n  }\n}\n</script>\n"]}]}